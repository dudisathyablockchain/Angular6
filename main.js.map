{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/meta/meta-sender/meta-sender.component.css","webpack:///./src/app/meta/meta-sender/meta-sender.component.html","webpack:///./src/app/meta/meta-sender/meta-sender.component.ts","webpack:///./src/app/meta/meta.module.ts","webpack:///./src/app/util/util.module.ts","webpack:///./src/app/util/web3.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?0deb","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">Angular Truffle Box</mat-toolbar>\\n<app-meta-sender></app-meta-sender>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport {MetaModule} from './meta/meta.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatToolbarModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MetaModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".address-field {\\n  width: 400px;\\n}\\n\\n\"","module.exports = \"<mat-card>\\n  <mat-card-header>Balance</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field id=\\\"address-selector\\\" class=\\\"address-field\\\">\\n      <mat-select name=\\\"account\\\" (selectionChange)=\\\"refreshBalance()\\\" [(value)]=\\\"model.account\\\" placeholder=\\\"Address\\\">\\n        <mat-option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account\\\">{{account}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <p>You have <span id=\\\"balance\\\">{{model.balance}}</span> META</p>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-header>Send MetaCoin</mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field>\\n      <input type=\\\"text\\\" matInput id=\\\"amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setAmount($event)\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"address-field\\\">\\n      <input type=\\\"text\\\" matInput id=\\\"receiver\\\" placeholder=\\\"Receiver Address\\\" (change)=\\\"setReceiver($event)\\\">\\n    </mat-form-field>\\n    <button mat-button id=\\\"send\\\" (click)=\\\"sendCoin()\\\">Send MetaCoin</button>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Web3Service} from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\ndeclare let require: any;\nconst metacoin_artifacts = require('../../../../build/contracts/MetaCoin.json');\n\n@Component({\n  selector: 'app-meta-sender',\n  templateUrl: './meta-sender.component.html',\n  styleUrls: ['./meta-sender.component.css']\n})\nexport class MetaSenderComponent implements OnInit {\n  accounts: string[];\n  MetaCoin: any;\n\n  model = {\n    amount: 5,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  status = '';\n\n  constructor(private web3Service: Web3Service, private matSnackBar: MatSnackBar) {\n    console.log('Constructor: ' + web3Service);\n  }\n\n  ngOnInit(): void {\n    console.log('OnInit: ' + this.web3Service);\n    console.log(this);\n    this.watchAccount();\n    this.web3Service.artifactsToContract(metacoin_artifacts)\n      .then((MetaCoinAbstraction) => {\n        this.MetaCoin = MetaCoinAbstraction;\n        this.MetaCoin.deployed().then(deployed => {\n          console.log(deployed);\n          deployed.Transfer({}, (err, ev) => {\n            console.log('Transfer event came in, refreshing balance');\n            this.refreshBalance();\n          });\n        });\n\n      });\n  }\n\n  watchAccount() {\n    this.web3Service.accountsObservable.subscribe((accounts) => {\n      this.accounts = accounts;\n      this.model.account = accounts[0];\n      this.refreshBalance();\n    });\n  }\n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n  async sendCoin() {\n    if (!this.MetaCoin) {\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.model.amount;\n    const receiver = this.model.receiver;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    try {\n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      const transaction = await deployedMetaCoin.sendCoin.sendTransaction(receiver, amount, {from: this.model.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  async refreshBalance() {\n    console.log('Refreshing balance');\n\n    try {\n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      console.log(deployedMetaCoin);\n      console.log('Account', this.model.account);\n      const metaCoinBalance = await deployedMetaCoin.getBalance.call(this.model.account);\n      console.log('Found balance: ' + metaCoinBalance);\n      this.model.balance = metaCoinBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  setAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.model.amount = e.target.value;\n  }\n\n  setReceiver(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.model.receiver = e.target.value;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MetaSenderComponent} from './meta-sender/meta-sender.component';\nimport {UtilModule} from '../util/util.module';\nimport {RouterModule} from '@angular/router';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule, MatSnackBarModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    RouterModule,\n    UtilModule\n  ],\n  declarations: [MetaSenderComponent],\n  exports: [MetaSenderComponent]\n})\nexport class MetaModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Web3Service} from './web3.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    Web3Service\n  ],\n  declarations: []\n})\nexport class UtilModule {\n}\n","import {Injectable} from '@angular/core';\nimport * as contract from 'truffle-contract';\nimport {Subject} from 'rxjs';\ndeclare let require: any;\nconst Web3 = require('web3');\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class Web3Service {\n  private web3: any;\n  private accounts: string[];\n  public ready = false;\n  public MetaCoin: any;\n  public accountsObservable = new Subject<string[]>();\n\n  constructor() {\n    window.addEventListener('load', (event) => {\n      this.bootstrapWeb3();\n    });\n  }\n\n  public bootstrapWeb3() {\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof window.web3 !== 'undefined') {\n      // Use Mist/MetaMask's provider\n      this.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      console.log('No web3? You should consider trying MetaMask!');\n\n      // Hack to provide backwards compatibility for Truffle, which uses web3js 0.20.x\n      Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n      this.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    }\n\n    setInterval(() => this.refreshAccounts(), 100);\n  }\n\n  public async artifactsToContract(artifacts) {\n    if (!this.web3) {\n      const delay = new Promise(resolve => setTimeout(resolve, 100));\n      await delay;\n      return await this.artifactsToContract(artifacts);\n    }\n\n    const contractAbstraction = contract(artifacts);\n    contractAbstraction.setProvider(this.web3.currentProvider);\n    return contractAbstraction;\n\n  }\n\n  private refreshAccounts() {\n    this.web3.eth.getAccounts((err, accs) => {\n      console.log('Refreshing accounts');\n      if (err != null) {\n        console.warn('There was an error fetching your accounts.');\n        return;\n      }\n\n      // Get the initial account balance so it can be displayed.\n      if (accs.length === 0) {\n        console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return;\n      }\n\n      if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n        console.log('Observed new accounts');\n\n        this.accountsObservable.next(accs);\n        this.accounts = accs;\n      }\n\n      this.ready = true;\n    });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}